// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAppUpnQ8Api.Models;

#nullable disable

namespace WebAppUpnQ8Api.Migrations
{
    [DbContext(typeof(WebAppUpnQ8ApiDBContext))]
    [Migration("20250430213326_seedDate")]
    partial class seedDate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "0191a4b6-c4fc-752e-9d95-40b5e4e68054",
                            ConcurrencyStamp = "0191a4b6-c4fc-752e-9d95-40b631d1866d",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "0191a4b6-c4fc-752e-9d95-40b7a5cb88f0",
                            ConcurrencyStamp = "0191a4b6-c4fc-752e-9d95-40b85cf3fd22",
                            Name = "User",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "0191a4b6-c4fc-752e-9d95-40b30fa7a9b6",
                            RoleId = "0191a4b6-c4fc-752e-9d95-40b5e4e68054"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("UPNprojectApi.Models.CitiesTbl", b =>
                {
                    b.Property<int>("City_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("City_ID"));

                    b.Property<string>("City_Name_Ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City_Name_Eng")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Country_ID")
                        .HasColumnType("int");

                    b.HasKey("City_ID");

                    b.HasIndex("Country_ID");

                    b.ToTable("CitiesTbls");
                });

            modelBuilder.Entity("UPNprojectApi.Models.CodeNumbersTbl", b =>
                {
                    b.Property<int>("Code_Number_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Code_Number_ID"));

                    b.Property<string>("Code_Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Country_ID")
                        .HasColumnType("int");

                    b.HasKey("Code_Number_ID");

                    b.HasIndex("Country_ID");

                    b.ToTable("CodeNumbersTbls");
                });

            modelBuilder.Entity("UPNprojectApi.Models.CompanyBrandsTbl", b =>
                {
                    b.Property<int>("Company_Brand_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Company_Brand_ID"));

                    b.Property<string>("Company_Brand_Name_Ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Company_Brand_Name_Eng")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Company_Brand_ID");

                    b.ToTable("CompanyBrandsTbls");
                });

            modelBuilder.Entity("UPNprojectApi.Models.ContentsTbl", b =>
                {
                    b.Property<int>("Content_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Content_ID"));

                    b.Property<string>("Content_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content_Name_Ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Content_ID");

                    b.ToTable("ContentsTbls");
                });

            modelBuilder.Entity("UPNprojectApi.Models.ContractConditionsTbl", b =>
                {
                    b.Property<int>("Contract_Condition_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Contract_Condition_ID"));

                    b.Property<string>("Contract_Condition_Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contract_Condition_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Maintinance_Contract_ID")
                        .HasColumnType("int");

                    b.HasKey("Contract_Condition_ID");

                    b.HasIndex("Maintinance_Contract_ID");

                    b.ToTable("ContractConditionsTbls");
                });

            modelBuilder.Entity("UPNprojectApi.Models.ContractServicesTbl", b =>
                {
                    b.Property<int>("Contract_Service_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Contract_Service_ID"));

                    b.Property<string>("Contract_Service_Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contract_Service_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Maintinance_Contract_ID")
                        .HasColumnType("int");

                    b.HasKey("Contract_Service_ID");

                    b.HasIndex("Maintinance_Contract_ID");

                    b.ToTable("ContractServicesTbls");
                });

            modelBuilder.Entity("UPNprojectApi.Models.CountriesTbl", b =>
                {
                    b.Property<int>("Country_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Country_ID"));

                    b.Property<string>("Country_Flag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country_Name_Eng")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Country_ID");

                    b.ToTable("CountriesTbls");
                });

            modelBuilder.Entity("UPNprojectApi.Models.Discounts", b =>
                {
                    b.Property<int>("Discount_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Discount_ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description_Ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DiscountPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Service_ID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Discount_ID");

                    b.HasIndex("Service_ID");

                    b.ToTable("Discounts");
                });

            modelBuilder.Entity("UPNprojectApi.Models.DiscountsTbl", b =>
                {
                    b.Property<int>("Discount_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Discount_ID"));

                    b.Property<string>("Discount_Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Discount_End_Date")
                        .HasColumnType("datetime2");

                    b.Property<double?>("Discount_Percent")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Discount_Start_Date")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Discount_Statues")
                        .HasColumnType("bit");

                    b.HasKey("Discount_ID");

                    b.ToTable("DiscountsTbl");
                });

            modelBuilder.Entity("UPNprojectApi.Models.DurationsTbl", b =>
                {
                    b.Property<int>("Duration_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Duration_ID"));

                    b.Property<double?>("Duration_Value")
                        .HasColumnType("float");

                    b.HasKey("Duration_ID");

                    b.ToTable("DurationsTbls");
                });

            modelBuilder.Entity("UPNprojectApi.Models.EmployeesTbl", b =>
                {
                    b.Property<int>("Employee_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Employee_ID"));

                    b.Property<DateTime?>("Birth_Day_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Department_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Employee_Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Experince_Years")
                        .HasColumnType("int");

                    b.Property<string>("Facebook_Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("First_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Instagram_Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("Job_Phone_Number")
                        .HasColumnType("bigint");

                    b.Property<string>("Last_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Linkedin_Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("Personal_Phone_Number")
                        .HasColumnType("bigint");

                    b.Property<string>("Position_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Twiter_Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Employee_ID");

                    b.ToTable("EmployeesTbls");
                });

            modelBuilder.Entity("UPNprojectApi.Models.EvaluationsTbl", b =>
                {
                    b.Property<int>("Evaluation_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Evaluation_ID"));

                    b.Property<DateTime?>("Evaluation_Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Evaluation_Stars")
                        .HasColumnType("int");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Product_ID")
                        .HasColumnType("int");

                    b.HasKey("Evaluation_ID");

                    b.HasIndex("Product_ID");

                    b.ToTable("EvaluationsTbls");
                });

            modelBuilder.Entity("UPNprojectApi.Models.HomeImagesTbl", b =>
                {
                    b.Property<int>("Home_Image_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Home_Image_ID"));

                    b.Property<string>("Home_Image_Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Home_Image_Place")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Home_Image_ID");

                    b.ToTable("HomeImagesTbls");
                });

            modelBuilder.Entity("UPNprojectApi.Models.HomePageTbl", b =>
                {
                    b.Property<int>("Home_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Home_ID"));

                    b.Property<string>("AboutUS_Feature_1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AboutUS_Feature_1_Ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AboutUS_Feature_2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AboutUS_Feature_2_Ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AboutUS_Feature_3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AboutUS_Feature_3_Ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AboutUS_Feature_4")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AboutUS_Feature_4_Ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descr_RequestAquote")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descr_RequestAquote_Ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descr_WhyChooseUs_1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descr_WhyChooseUs_1_Ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descr_WhyChooseUs_2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descr_WhyChooseUs_2_Ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descr_WhyChooseUs_3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descr_WhyChooseUs_3_Ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descr_WhyChooseUs_4")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descr_WhyChooseUs_4_Ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description_AboutUS")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description_AboutUS_Ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Footer_Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Footer_Description_Ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Footer_Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Footer_Title_Ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Happy_Client_Num")
                        .HasColumnType("int");

                    b.Property<string>("Logo_WhyChooseUs_1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logo_WhyChooseUs_1_Ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logo_WhyChooseUs_2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logo_WhyChooseUs_2_Ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logo_WhyChooseUs_3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logo_WhyChooseUs_3_Ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logo_WhyChooseUs_4")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logo_WhyChooseUs_4_Ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Projects_Done_Num")
                        .HasColumnType("int");

                    b.Property<string>("Sub_Title_WhyChooseUs_1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sub_Title_WhyChooseUs_1_Ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sub_Title_WhyChooseUs_2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sub_Title_WhyChooseUs_2_Ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sub_Title_WhyChooseUs_3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sub_Title_WhyChooseUs_3_Ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sub_Title_WhyChooseUs_4")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sub_Title_WhyChooseUs_4_Ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title_AboutUS")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title_AboutUS_Ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title_ContactUs")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title_ContactUs_Ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title_OurServices")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title_OurServices_Ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title_Plans")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title_Plans_Ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title_Products")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title_Products_Ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title_RequestAquote")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title_RequestAquote_Ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title_WhyChooseUS")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title_WhyChooseUS_Ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Win_Awards_Num")
                        .HasColumnType("int");

                    b.HasKey("Home_ID");

                    b.ToTable("HomePageTbls");
                });

            modelBuilder.Entity("UPNprojectApi.Models.HomeTitlesTbl", b =>
                {
                    b.Property<int>("Home_Title_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Home_Title_ID"));

                    b.Property<string>("Home_Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Home_Title_Place")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Home_Title_ID");

                    b.ToTable("HomeTitlesTbls");
                });

            modelBuilder.Entity("UPNprojectApi.Models.LoginUserTbl", b =>
                {
                    b.Property<int>("Login_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Login_ID"));

                    b.Property<string>("Browser_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IP_Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Login_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("OS_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("User_ID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Login_ID");

                    b.ToTable("LoginUserTbls");
                });

            modelBuilder.Entity("UPNprojectApi.Models.MaintinanceContractsTbl", b =>
                {
                    b.Property<int>("Maintinance_Contract_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Maintinance_Contract_ID"));

                    b.Property<int?>("Duration_By_Month")
                        .HasColumnType("int");

                    b.Property<int?>("Maintinance_Contract_Duration")
                        .HasColumnType("int");

                    b.Property<string>("Maintinance_Contract_Title_Ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Maintinance_Contract_Title_Eng")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Maintinance_Contract_ID");

                    b.ToTable("MaintinanceContractsTbls");
                });

            modelBuilder.Entity("UPNprojectApi.Models.MaintinanceRequestsTbl", b =>
                {
                    b.Property<int>("Maintinance_Request_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Maintinance_Request_ID"));

                    b.Property<string>("Customer_ID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Maintinance_Contract_ID")
                        .HasColumnType("int");

                    b.Property<bool?>("Request_Statues")
                        .HasColumnType("bit");

                    b.HasKey("Maintinance_Request_ID");

                    b.HasIndex("Customer_ID");

                    b.HasIndex("Maintinance_Contract_ID");

                    b.ToTable("MaintinanceRequestsTbls");
                });

            modelBuilder.Entity("UPNprojectApi.Models.NavbarCarsolsTbl", b =>
                {
                    b.Property<int>("NavbarCarsol_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NavbarCarsol_ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description_Ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tilte")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tilte_Ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NavbarCarsol_ID");

                    b.ToTable("NavbarCarsolsTbls");
                });

            modelBuilder.Entity("UPNprojectApi.Models.PaymentTypesTbl", b =>
                {
                    b.Property<int>("Payment_Type_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Payment_Type_ID"));

                    b.Property<string>("Payment_Type_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Payment_Type_ID");

                    b.ToTable("PaymentTypesTbls");
                });

            modelBuilder.Entity("UPNprojectApi.Models.PlanContentsTbl", b =>
                {
                    b.Property<int>("Plan_Content_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Plan_Content_ID"));

                    b.Property<int>("Content_ID")
                        .HasColumnType("int");

                    b.Property<string>("Content_Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content_Value_Ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Plan_ID")
                        .HasColumnType("int");

                    b.HasKey("Plan_Content_ID");

                    b.HasIndex("Content_ID");

                    b.HasIndex("Plan_ID");

                    b.ToTable("PlanContentsTbls");
                });

            modelBuilder.Entity("UPNprojectApi.Models.PlanSubscripeContentsTbl", b =>
                {
                    b.Property<int>("Subscripe_Content_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Subscripe_Content_ID"));

                    b.Property<int>("Content_ID")
                        .HasColumnType("int");

                    b.Property<string>("Current_Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Plan_Subscripe_ID")
                        .HasColumnType("int");

                    b.HasKey("Subscripe_Content_ID");

                    b.HasIndex("Content_ID");

                    b.HasIndex("Plan_Subscripe_ID");

                    b.ToTable("PlanSubscripeContentsTbls");
                });

            modelBuilder.Entity("UPNprojectApi.Models.PlanSubscripesTbl", b =>
                {
                    b.Property<int>("Plan_Subscripe_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Plan_Subscripe_ID"));

                    b.Property<string>("Customer_ID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Discount_ID")
                        .HasColumnType("int");

                    b.Property<int?>("DurationInMonth")
                        .HasColumnType("int");

                    b.Property<int>("Plan_ID")
                        .HasColumnType("int");

                    b.Property<string>("Subscripe_Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Subscription_End_Date")
                        .HasColumnType("datetime2");

                    b.Property<double?>("Subscription_Price")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Subscription_Start_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Plan_Subscripe_ID");

                    b.HasIndex("Customer_ID");

                    b.HasIndex("Discount_ID");

                    b.HasIndex("Plan_ID");

                    b.ToTable("PlanSubscripesTbls");
                });

            modelBuilder.Entity("UPNprojectApi.Models.PlansTbl", b =>
                {
                    b.Property<int>("Plan_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Plan_ID"));

                    b.Property<string>("Plan_Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Plan_Description_Ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Plan_Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Plan_Title_Ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Price_1m")
                        .HasColumnType("float");

                    b.Property<double?>("Price_1y")
                        .HasColumnType("float");

                    b.Property<double?>("Price_2y")
                        .HasColumnType("float");

                    b.Property<double?>("Price_6m")
                        .HasColumnType("float");

                    b.HasKey("Plan_ID");

                    b.ToTable("PlansTbls");
                });

            modelBuilder.Entity("UPNprojectApi.Models.ProductDetailsTbl", b =>
                {
                    b.Property<int>("Product_Detail_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Product_Detail_ID"));

                    b.Property<string>("Detail_Description_Ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Detail_Description_Eng")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Product_ID")
                        .HasColumnType("int");

                    b.HasKey("Product_Detail_ID");

                    b.ToTable("ProductDetailsTbls");
                });

            modelBuilder.Entity("UPNprojectApi.Models.ProductSalesTbl", b =>
                {
                    b.Property<int>("Product_Sale_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Product_Sale_ID"));

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Product_ID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Sale_Date")
                        .HasColumnType("datetime2");

                    b.Property<double?>("Sale_Price")
                        .HasColumnType("float");

                    b.HasKey("Product_Sale_ID");

                    b.HasIndex("Product_ID");

                    b.ToTable("ProductSalesTbls");
                });

            modelBuilder.Entity("UPNprojectApi.Models.ProductSpecificationsTbl", b =>
                {
                    b.Property<int>("Product_Specificate_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Product_Specificate_ID"));

                    b.Property<int>("Product_ID")
                        .HasColumnType("int");

                    b.Property<string>("Product_Specificate_Value_Ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Product_Specificate_Value_Eng")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Product_Sub_Type_Specific_ID")
                        .HasColumnType("int");

                    b.HasKey("Product_Specificate_ID");

                    b.HasIndex("Product_ID");

                    b.HasIndex("Product_Sub_Type_Specific_ID");

                    b.ToTable("ProductSpecificationsTbls");
                });

            modelBuilder.Entity("UPNprojectApi.Models.ProductSubTypeSpecificationsTbl", b =>
                {
                    b.Property<int>("Product_Sub_Type_Specific_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Product_Sub_Type_Specific_ID"));

                    b.Property<int>("Product_Sub_Type_ID")
                        .HasColumnType("int");

                    b.Property<string>("Sub_Type_Specific_Name_Ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sub_Type_Specific_Name_Eng")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Product_Sub_Type_Specific_ID");

                    b.HasIndex("Product_Sub_Type_ID");

                    b.ToTable("ProductSubTypeSpecificationsTbls");
                });

            modelBuilder.Entity("UPNprojectApi.Models.ProductSubTypesTbl", b =>
                {
                    b.Property<int>("Product_Sub_Type_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Product_Sub_Type_ID"));

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Product_Type_ID")
                        .HasColumnType("int");

                    b.Property<string>("Sub_Type_Name_Ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sub_Type_Name_Eng")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Product_Sub_Type_ID");

                    b.HasIndex("Product_Type_ID");

                    b.ToTable("ProductSubTypesTbls");
                });

            modelBuilder.Entity("UPNprojectApi.Models.ProductTypesTbl", b =>
                {
                    b.Property<int>("Product_Type_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Product_Type_ID"));

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Product_Type_Name_Ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Product_Type_Name_Eng")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Product_Type_ID");

                    b.ToTable("ProductTypesTbls");
                });

            modelBuilder.Entity("UPNprojectApi.Models.ProductsTbl", b =>
                {
                    b.Property<int>("Product_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Product_ID"));

                    b.Property<double?>("Buy_Price")
                        .HasColumnType("float");

                    b.Property<int>("Company_Brand_ID")
                        .HasColumnType("int");

                    b.Property<double?>("Discount_Percent")
                        .HasColumnType("float");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Number_Piecies")
                        .HasColumnType("int");

                    b.Property<string>("Product_Description_Ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Product_Description_Eng")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Product_Name_Ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Product_Name_Eng")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Product_Sub_Type_ID")
                        .HasColumnType("int");

                    b.Property<double?>("Sale_Price")
                        .HasColumnType("float");

                    b.HasKey("Product_ID");

                    b.HasIndex("Company_Brand_ID");

                    b.HasIndex("Product_Sub_Type_ID");

                    b.ToTable("ProductsTbls");
                });

            modelBuilder.Entity("UPNprojectApi.Models.RequestsQuoteTbl", b =>
                {
                    b.Property<int>("Request_Quote_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Request_Quote_ID"));

                    b.Property<string>("Custom_Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Custom_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Request_Date")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Request_Status")
                        .HasColumnType("bit");

                    b.Property<int>("Service_ID")
                        .HasColumnType("int");

                    b.HasKey("Request_Quote_ID");

                    b.HasIndex("Service_ID");

                    b.ToTable("RequestsQuoteTbls");
                });

            modelBuilder.Entity("UPNprojectApi.Models.ServiceRequestsTbl", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Customer_ID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("Finished_Date")
                        .HasColumnType("datetime2");

                    b.Property<double?>("Price")
                        .HasColumnType("float");

                    b.Property<double?>("Renewal_price")
                        .HasColumnType("float");

                    b.Property<bool?>("Renewal_request")
                        .HasColumnType("bit");

                    b.Property<int>("Request_Status")
                        .HasColumnType("int");

                    b.Property<string>("Requset_Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Service_Active_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Service_Request_Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Service_Request_Statues")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Service_Response_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Sub_Service_ID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Customer_ID");

                    b.HasIndex("Sub_Service_ID");

                    b.ToTable("ServiceRequestsTbls");
                });

            modelBuilder.Entity("UPNprojectApi.Models.ServicesTbl", b =>
                {
                    b.Property<int>("Service_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Service_ID"));

                    b.Property<string>("IconDark")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IconLight")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Service_Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Service_Description_Ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Service_Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Service_Title_Ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Service_ID");

                    b.ToTable("ServicesTbls");
                });

            modelBuilder.Entity("UPNprojectApi.Models.SocialAccountsTbl", b =>
                {
                    b.Property<int>("SocialAccount_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SocialAccount_ID"));

                    b.Property<string>("Account_URL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Social_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SocialAccount_ID");

                    b.ToTable("SocialAccountsTbls");
                });

            modelBuilder.Entity("UPNprojectApi.Models.SpecialFeaturesTbl", b =>
                {
                    b.Property<int>("Special_Feature_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Special_Feature_ID"));

                    b.Property<string>("Feature_Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Feature_Description_Ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Feature_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Feature_Name_Ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Feature_Price")
                        .HasColumnType("float");

                    b.Property<int>("Service_ID")
                        .HasColumnType("int");

                    b.HasKey("Special_Feature_ID");

                    b.HasIndex("Service_ID");

                    b.ToTable("SpecialFeaturesTbls");
                });

            modelBuilder.Entity("UPNprojectApi.Models.SpecialRequestFeaturesTbl", b =>
                {
                    b.Property<int>("Special_Request_Feature_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Special_Request_Feature_ID"));

                    b.Property<int>("Special_Feature_ID")
                        .HasColumnType("int");

                    b.Property<int>("Special_Request_ID")
                        .HasColumnType("int");

                    b.HasKey("Special_Request_Feature_ID");

                    b.HasIndex("Special_Feature_ID");

                    b.HasIndex("Special_Request_ID");

                    b.ToTable("SpecialRequestFeaturesTbls");
                });

            modelBuilder.Entity("UPNprojectApi.Models.SpecialRequestsTbl", b =>
                {
                    b.Property<int>("Special_Request_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Special_Request_ID"));

                    b.Property<string>("Customer_ID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("Request_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Requset_Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Service_ID")
                        .HasColumnType("int");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("User_ID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Special_Request_ID");

                    b.HasIndex("Customer_ID");

                    b.HasIndex("Service_ID");

                    b.ToTable("SpecialRequestsTbls");
                });

            modelBuilder.Entity("UPNprojectApi.Models.SubFeaturesTbl", b =>
                {
                    b.Property<int>("Sub_Feature_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Sub_Feature_ID"));

                    b.Property<string>("Sub_Feature_Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sub_Feature_Text_Ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sub_Service_ID")
                        .HasColumnType("int");

                    b.HasKey("Sub_Feature_ID");

                    b.HasIndex("Sub_Service_ID");

                    b.ToTable("SubFeaturesTbls");
                });

            modelBuilder.Entity("UPNprojectApi.Models.SubServicesTbl", b =>
                {
                    b.Property<int>("Sub_Service_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Sub_Service_ID"));

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Service_ID")
                        .HasColumnType("int");

                    b.Property<double?>("Sub_Service_Price")
                        .HasColumnType("float");

                    b.Property<string>("Sub_Service_Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sub_Service_Title_Ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Sub_Service_ID");

                    b.HasIndex("Service_ID");

                    b.ToTable("SubServicesTbls");
                });

            modelBuilder.Entity("UPNprojectApi.Models.SubscriptionsTbl", b =>
                {
                    b.Property<int>("Subscription_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Subscription_ID"));

                    b.Property<string>("Customer_ID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Discount_ID")
                        .HasColumnType("int");

                    b.Property<int>("Payment_Type_ID")
                        .HasColumnType("int");

                    b.Property<int?>("Princing_Duration_ID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Subscription_End_Date")
                        .HasColumnType("datetime2");

                    b.Property<double?>("Subscription_Price")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Subscription_Start_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Subscription_ID");

                    b.HasIndex("Customer_ID");

                    b.HasIndex("Discount_ID");

                    b.HasIndex("Payment_Type_ID");

                    b.ToTable("SubscriptionsTbls");
                });

            modelBuilder.Entity("UPNprojectApi.Models.TestmonialsTbl", b =>
                {
                    b.Property<int>("Testmonial_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Testmonial_ID"));

                    b.Property<string>("Customer_ID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("Rating_Stars")
                        .HasColumnType("int");

                    b.Property<string>("Testmonial_Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("User_ID")
                        .HasColumnType("int");

                    b.HasKey("Testmonial_ID");

                    b.HasIndex("Customer_ID");

                    b.ToTable("TestmonialsTbls");
                });

            modelBuilder.Entity("WebAppUpnQ8Api.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<int?>("CodeNumberId")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SecondAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondPhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("CodeNumberId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "0191a4b6-c4fc-752e-9d95-40b30fa7a9b6",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "0191a4b6-c4fc-752e-9d95-40b42a925b8e",
                            Email = "admin@UpnQ8.com",
                            EmailConfirmed = true,
                            FirstName = "UpnQ8A",
                            Gender = false,
                            LastName = "Admin",
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@UPNQ8.COM",
                            NormalizedUserName = "ADMIN@UPNQ8.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEKNBpPV7qI3TPxuNFJth5cCA3sNdI7bs07Sh+Wu9vUrr+13Ls03V1e8EFNMZEYo8Mg==",
                            PhoneNumberConfirmed = false,
                            RegisterDate = new DateTime(2025, 4, 30, 21, 33, 24, 641, DateTimeKind.Utc).AddTicks(4008),
                            SecurityStamp = "55BF92C9EF0249CDA210D85D1A851BC9",
                            TwoFactorEnabled = false,
                            UserName = "admin@UpnQ8.com"
                        });
                });

            modelBuilder.Entity("WebAppUpnQ8Api.Models.RefreshTokenTbl", b =>
                {
                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Token");

                    b.ToTable("RefreshTokenTbls");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("WebAppUpnQ8Api.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("WebAppUpnQ8Api.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAppUpnQ8Api.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("WebAppUpnQ8Api.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UPNprojectApi.Models.CitiesTbl", b =>
                {
                    b.HasOne("UPNprojectApi.Models.CountriesTbl", "CountriesTbl")
                        .WithMany("CitiesTbls")
                        .HasForeignKey("Country_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CountriesTbl");
                });

            modelBuilder.Entity("UPNprojectApi.Models.CodeNumbersTbl", b =>
                {
                    b.HasOne("UPNprojectApi.Models.CountriesTbl", "CountriesTbl")
                        .WithMany("CodeNumbersTbls")
                        .HasForeignKey("Country_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CountriesTbl");
                });

            modelBuilder.Entity("UPNprojectApi.Models.ContractConditionsTbl", b =>
                {
                    b.HasOne("UPNprojectApi.Models.MaintinanceContractsTbl", "MaintinanceContractsTbl")
                        .WithMany("ContractConditionsTbls")
                        .HasForeignKey("Maintinance_Contract_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MaintinanceContractsTbl");
                });

            modelBuilder.Entity("UPNprojectApi.Models.ContractServicesTbl", b =>
                {
                    b.HasOne("UPNprojectApi.Models.MaintinanceContractsTbl", "MaintinanceContractsTbl")
                        .WithMany("ContractServicesTbls")
                        .HasForeignKey("Maintinance_Contract_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MaintinanceContractsTbl");
                });

            modelBuilder.Entity("UPNprojectApi.Models.Discounts", b =>
                {
                    b.HasOne("UPNprojectApi.Models.ServicesTbl", "Service")
                        .WithMany()
                        .HasForeignKey("Service_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Service");
                });

            modelBuilder.Entity("UPNprojectApi.Models.EvaluationsTbl", b =>
                {
                    b.HasOne("UPNprojectApi.Models.ProductsTbl", "ProductsTbl")
                        .WithMany("EvaluationsTbls")
                        .HasForeignKey("Product_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductsTbl");
                });

            modelBuilder.Entity("UPNprojectApi.Models.MaintinanceRequestsTbl", b =>
                {
                    b.HasOne("WebAppUpnQ8Api.Models.ApplicationUser", "CustomersTbl")
                        .WithMany("MaintinanceRequestsTbls")
                        .HasForeignKey("Customer_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UPNprojectApi.Models.MaintinanceContractsTbl", "MaintinanceContractsTbl")
                        .WithMany("MaintinanceRequestsTbls")
                        .HasForeignKey("Maintinance_Contract_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustomersTbl");

                    b.Navigation("MaintinanceContractsTbl");
                });

            modelBuilder.Entity("UPNprojectApi.Models.PlanContentsTbl", b =>
                {
                    b.HasOne("UPNprojectApi.Models.ContentsTbl", "ContentsTbl")
                        .WithMany("PlanContentsTbls")
                        .HasForeignKey("Content_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UPNprojectApi.Models.PlansTbl", "PlansTbl")
                        .WithMany("PlanContentsTbls")
                        .HasForeignKey("Plan_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContentsTbl");

                    b.Navigation("PlansTbl");
                });

            modelBuilder.Entity("UPNprojectApi.Models.PlanSubscripeContentsTbl", b =>
                {
                    b.HasOne("UPNprojectApi.Models.ContentsTbl", "ContentsTbl")
                        .WithMany("PlanSubscripeContentsTbls")
                        .HasForeignKey("Content_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UPNprojectApi.Models.PlanSubscripesTbl", "PlanSubscripesTbl")
                        .WithMany("PlanSubscripeContentsTbls")
                        .HasForeignKey("Plan_Subscripe_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContentsTbl");

                    b.Navigation("PlanSubscripesTbl");
                });

            modelBuilder.Entity("UPNprojectApi.Models.PlanSubscripesTbl", b =>
                {
                    b.HasOne("WebAppUpnQ8Api.Models.ApplicationUser", "CustomersTbl")
                        .WithMany("PlanSubscripesTbls")
                        .HasForeignKey("Customer_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UPNprojectApi.Models.DiscountsTbl", "DiscountsTbl")
                        .WithMany("PlanSubscripesTbls")
                        .HasForeignKey("Discount_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UPNprojectApi.Models.PlansTbl", "PlansTbl")
                        .WithMany("PlanSubscripesTbls")
                        .HasForeignKey("Plan_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustomersTbl");

                    b.Navigation("DiscountsTbl");

                    b.Navigation("PlansTbl");
                });

            modelBuilder.Entity("UPNprojectApi.Models.ProductSalesTbl", b =>
                {
                    b.HasOne("UPNprojectApi.Models.ProductsTbl", "ProductsTbl")
                        .WithMany("ProductSalesTbls")
                        .HasForeignKey("Product_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductsTbl");
                });

            modelBuilder.Entity("UPNprojectApi.Models.ProductSpecificationsTbl", b =>
                {
                    b.HasOne("UPNprojectApi.Models.ProductsTbl", "ProductsTbl")
                        .WithMany("ProductSpecificationsTbls")
                        .HasForeignKey("Product_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UPNprojectApi.Models.ProductSubTypeSpecificationsTbl", "ProductSubTypeSpecificationsTbl")
                        .WithMany("ProductSpecificationsTbls")
                        .HasForeignKey("Product_Sub_Type_Specific_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductSubTypeSpecificationsTbl");

                    b.Navigation("ProductsTbl");
                });

            modelBuilder.Entity("UPNprojectApi.Models.ProductSubTypeSpecificationsTbl", b =>
                {
                    b.HasOne("UPNprojectApi.Models.ProductSubTypesTbl", "ProductSubTypesTbl")
                        .WithMany("ProductSubTypeSpecificationsTbls")
                        .HasForeignKey("Product_Sub_Type_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductSubTypesTbl");
                });

            modelBuilder.Entity("UPNprojectApi.Models.ProductSubTypesTbl", b =>
                {
                    b.HasOne("UPNprojectApi.Models.ProductTypesTbl", "ProductTypesTbl")
                        .WithMany("ProductSubTypesTbls")
                        .HasForeignKey("Product_Type_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductTypesTbl");
                });

            modelBuilder.Entity("UPNprojectApi.Models.ProductsTbl", b =>
                {
                    b.HasOne("UPNprojectApi.Models.CompanyBrandsTbl", "CompanyBrandsTbl")
                        .WithMany("ProductsTbls")
                        .HasForeignKey("Company_Brand_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UPNprojectApi.Models.ProductSubTypesTbl", "ProductSubTypesTbl")
                        .WithMany("ProductsTbls")
                        .HasForeignKey("Product_Sub_Type_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyBrandsTbl");

                    b.Navigation("ProductSubTypesTbl");
                });

            modelBuilder.Entity("UPNprojectApi.Models.RequestsQuoteTbl", b =>
                {
                    b.HasOne("UPNprojectApi.Models.ServicesTbl", "ServicesTbl")
                        .WithMany("RequestsQuoteTbls")
                        .HasForeignKey("Service_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ServicesTbl");
                });

            modelBuilder.Entity("UPNprojectApi.Models.ServiceRequestsTbl", b =>
                {
                    b.HasOne("WebAppUpnQ8Api.Models.ApplicationUser", "CustomersTbl")
                        .WithMany("ServiceRequestsTbls")
                        .HasForeignKey("Customer_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UPNprojectApi.Models.SubServicesTbl", "SubServicesTbl")
                        .WithMany("ServiceRequestsTbls")
                        .HasForeignKey("Sub_Service_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustomersTbl");

                    b.Navigation("SubServicesTbl");
                });

            modelBuilder.Entity("UPNprojectApi.Models.SpecialFeaturesTbl", b =>
                {
                    b.HasOne("UPNprojectApi.Models.ServicesTbl", "ServicesTbl")
                        .WithMany("SpecialFeaturesTbls")
                        .HasForeignKey("Service_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ServicesTbl");
                });

            modelBuilder.Entity("UPNprojectApi.Models.SpecialRequestFeaturesTbl", b =>
                {
                    b.HasOne("UPNprojectApi.Models.SpecialFeaturesTbl", "SpecialFeaturesTbl")
                        .WithMany("SpecialRequestFeaturesTbls")
                        .HasForeignKey("Special_Feature_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UPNprojectApi.Models.SpecialRequestsTbl", "SpecialRequestsTbl")
                        .WithMany("SpecialRequestFeaturesTbls")
                        .HasForeignKey("Special_Request_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SpecialFeaturesTbl");

                    b.Navigation("SpecialRequestsTbl");
                });

            modelBuilder.Entity("UPNprojectApi.Models.SpecialRequestsTbl", b =>
                {
                    b.HasOne("WebAppUpnQ8Api.Models.ApplicationUser", "CustomersTbl")
                        .WithMany("SpecialRequestsTbls")
                        .HasForeignKey("Customer_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UPNprojectApi.Models.ServicesTbl", "ServicesTbl")
                        .WithMany("SpecialRequestsTbls")
                        .HasForeignKey("Service_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustomersTbl");

                    b.Navigation("ServicesTbl");
                });

            modelBuilder.Entity("UPNprojectApi.Models.SubFeaturesTbl", b =>
                {
                    b.HasOne("UPNprojectApi.Models.SubServicesTbl", "SubServicesTbl")
                        .WithMany("SubFeaturesTbls")
                        .HasForeignKey("Sub_Service_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SubServicesTbl");
                });

            modelBuilder.Entity("UPNprojectApi.Models.SubServicesTbl", b =>
                {
                    b.HasOne("UPNprojectApi.Models.ServicesTbl", "ServicesTbl")
                        .WithMany("SubServicesTbls")
                        .HasForeignKey("Service_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ServicesTbl");
                });

            modelBuilder.Entity("UPNprojectApi.Models.SubscriptionsTbl", b =>
                {
                    b.HasOne("WebAppUpnQ8Api.Models.ApplicationUser", "CustomersTbl")
                        .WithMany("SubscriptionsTbls")
                        .HasForeignKey("Customer_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UPNprojectApi.Models.DiscountsTbl", "DiscountsTbl")
                        .WithMany("SubscriptionsTbls")
                        .HasForeignKey("Discount_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UPNprojectApi.Models.PaymentTypesTbl", "PaymentTypesTbl")
                        .WithMany("SubscriptionsTbls")
                        .HasForeignKey("Payment_Type_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustomersTbl");

                    b.Navigation("DiscountsTbl");

                    b.Navigation("PaymentTypesTbl");
                });

            modelBuilder.Entity("UPNprojectApi.Models.TestmonialsTbl", b =>
                {
                    b.HasOne("WebAppUpnQ8Api.Models.ApplicationUser", "CustomersTbl")
                        .WithMany("TestmonialsTbls")
                        .HasForeignKey("Customer_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustomersTbl");
                });

            modelBuilder.Entity("WebAppUpnQ8Api.Models.ApplicationUser", b =>
                {
                    b.HasOne("UPNprojectApi.Models.CitiesTbl", "CitiesTbl")
                        .WithMany("CustomersTbls")
                        .HasForeignKey("CityId");

                    b.HasOne("UPNprojectApi.Models.CodeNumbersTbl", "CodeNumbersTbl")
                        .WithMany("CustomersTbls")
                        .HasForeignKey("CodeNumberId");

                    b.Navigation("CitiesTbl");

                    b.Navigation("CodeNumbersTbl");
                });

            modelBuilder.Entity("UPNprojectApi.Models.CitiesTbl", b =>
                {
                    b.Navigation("CustomersTbls");
                });

            modelBuilder.Entity("UPNprojectApi.Models.CodeNumbersTbl", b =>
                {
                    b.Navigation("CustomersTbls");
                });

            modelBuilder.Entity("UPNprojectApi.Models.CompanyBrandsTbl", b =>
                {
                    b.Navigation("ProductsTbls");
                });

            modelBuilder.Entity("UPNprojectApi.Models.ContentsTbl", b =>
                {
                    b.Navigation("PlanContentsTbls");

                    b.Navigation("PlanSubscripeContentsTbls");
                });

            modelBuilder.Entity("UPNprojectApi.Models.CountriesTbl", b =>
                {
                    b.Navigation("CitiesTbls");

                    b.Navigation("CodeNumbersTbls");
                });

            modelBuilder.Entity("UPNprojectApi.Models.DiscountsTbl", b =>
                {
                    b.Navigation("PlanSubscripesTbls");

                    b.Navigation("SubscriptionsTbls");
                });

            modelBuilder.Entity("UPNprojectApi.Models.MaintinanceContractsTbl", b =>
                {
                    b.Navigation("ContractConditionsTbls");

                    b.Navigation("ContractServicesTbls");

                    b.Navigation("MaintinanceRequestsTbls");
                });

            modelBuilder.Entity("UPNprojectApi.Models.PaymentTypesTbl", b =>
                {
                    b.Navigation("SubscriptionsTbls");
                });

            modelBuilder.Entity("UPNprojectApi.Models.PlanSubscripesTbl", b =>
                {
                    b.Navigation("PlanSubscripeContentsTbls");
                });

            modelBuilder.Entity("UPNprojectApi.Models.PlansTbl", b =>
                {
                    b.Navigation("PlanContentsTbls");

                    b.Navigation("PlanSubscripesTbls");
                });

            modelBuilder.Entity("UPNprojectApi.Models.ProductSubTypeSpecificationsTbl", b =>
                {
                    b.Navigation("ProductSpecificationsTbls");
                });

            modelBuilder.Entity("UPNprojectApi.Models.ProductSubTypesTbl", b =>
                {
                    b.Navigation("ProductSubTypeSpecificationsTbls");

                    b.Navigation("ProductsTbls");
                });

            modelBuilder.Entity("UPNprojectApi.Models.ProductTypesTbl", b =>
                {
                    b.Navigation("ProductSubTypesTbls");
                });

            modelBuilder.Entity("UPNprojectApi.Models.ProductsTbl", b =>
                {
                    b.Navigation("EvaluationsTbls");

                    b.Navigation("ProductSalesTbls");

                    b.Navigation("ProductSpecificationsTbls");
                });

            modelBuilder.Entity("UPNprojectApi.Models.ServicesTbl", b =>
                {
                    b.Navigation("RequestsQuoteTbls");

                    b.Navigation("SpecialFeaturesTbls");

                    b.Navigation("SpecialRequestsTbls");

                    b.Navigation("SubServicesTbls");
                });

            modelBuilder.Entity("UPNprojectApi.Models.SpecialFeaturesTbl", b =>
                {
                    b.Navigation("SpecialRequestFeaturesTbls");
                });

            modelBuilder.Entity("UPNprojectApi.Models.SpecialRequestsTbl", b =>
                {
                    b.Navigation("SpecialRequestFeaturesTbls");
                });

            modelBuilder.Entity("UPNprojectApi.Models.SubServicesTbl", b =>
                {
                    b.Navigation("ServiceRequestsTbls");

                    b.Navigation("SubFeaturesTbls");
                });

            modelBuilder.Entity("WebAppUpnQ8Api.Models.ApplicationUser", b =>
                {
                    b.Navigation("MaintinanceRequestsTbls");

                    b.Navigation("PlanSubscripesTbls");

                    b.Navigation("ServiceRequestsTbls");

                    b.Navigation("SpecialRequestsTbls");

                    b.Navigation("SubscriptionsTbls");

                    b.Navigation("TestmonialsTbls");
                });
#pragma warning restore 612, 618
        }
    }
}
